{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "buyersList",
      "outputs": [
        {
          "internalType": "address",
          "name": "buyerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "buyerName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "buyerID",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isExist",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_buyerName",
          "type": "string"
        }
      ],
      "name": "createBuyer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_sellerName",
          "type": "string"
        }
      ],
      "name": "createSeller",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "productID",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "sellAddress",
          "type": "address"
        }
      ],
      "name": "purchaseProduct",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveTotalBuyers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveTotalSellers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sellersList",
      "outputs": [
        {
          "internalType": "address",
          "name": "sellerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "sellerName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "sellerID",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isExist",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "totalProducts",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_productName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "uploadProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_txnID",
          "type": "uint256"
        }
      ],
      "name": "viewProductBought",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sellerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_productID",
          "type": "uint256"
        }
      ],
      "name": "viewProductPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sellerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_productID",
          "type": "uint256"
        }
      ],
      "name": "viewProductSold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x1dd5e8c79e7e766b3785a059799acf18e6dcb536a7439b6fd78de808b89383c4",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2020072",
    "logsBloom": "0x
    "blockHash": "0xd4d03cb9ac6d7f3bf86ab60dfa1d9d912cbaf0d4837ac4d1a5039b7fbb9e4c18",
    "transactionHash": "0x1dd5e8c79e7e766b3785a059799acf18e6dcb536a7439b6fd78de808b89383c4",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2020072",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e1492ff9792bf01b9f1c421523564d19",
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"buyersList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"buyerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"buyerID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_buyerName\",\"type\":\"string\"}],\"name\":\"createBuyer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_sellerName\",\"type\":\"string\"}],\"name\":\"createSeller\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"productID\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"sellAddress\",\"type\":\"address\"}],\"name\":\"purchaseProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveTotalBuyers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveTotalSellers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sellersList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sellerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"sellerName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"sellerID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isExist\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"totalProducts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_productName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"uploadProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_txnID\",\"type\":\"uint256\"}],\"name\":\"viewProductBought\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"}],\"name\":\"viewProductPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sellerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_productID\",\"type\":\"uint256\"}],\"name\":\"viewProductSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/Store.sol\":\"Store\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Contracts/Store.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.21;\\r\\n\\r\\ncontract Store {\\r\\n\\r\\n\\r\\n    uint256 private totalSellers = 0;\\r\\n    uint256 private totalBuyers = 0;\\r\\n\\r\\n\\r\\n    //----- Structs -----\\r\\n\\r\\n    struct Product {\\r\\n        uint256 ProductID;\\r\\n        string productName;\\r\\n        address sellerAddress; // The product object has a sellerAddress reference \\r\\n        uint256 productPrice; //in wei \\r\\n        uint256 totalSold;\\r\\n        bool isExist; //flag to determin whether the product exists TODO: figure out a better way\\r\\n    }\\r\\n\\r\\n    struct Seller {\\r\\n        address sellerAddress;\\r\\n        string sellerName;\\r\\n        uint256 sellerID;\\r\\n        bool isExist; //flag to determine whether the Seller exists TODO: find a better way\\r\\n        mapping(uint256 => Product) sellerProducts; //using the productID to obtain the product ; TODO: can we use a string instead?\\r\\n        uint256 totalProducts;\\r\\n    }\\r\\n\\r\\n    struct Buyer {\\r\\n        address buyerAddress;\\r\\n        string buyerName;\\r\\n        uint256 buyerID; //TODO: figure out the difference between uint and uint256\\r\\n        bool isExist; //flag to determine whether the buyer exists TODO: figure out a better way\\r\\n        Product[] purchasedProducts;\\r\\n    }\\r\\n\\r\\n    //----- Mappings -----\\r\\n\\r\\n    //Maps user address to Seller or Buyer account structs\\r\\n    mapping(address => Seller) public sellersList;\\r\\n    mapping(address => Buyer) public buyersList;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    // TODO: can we merge this with the object itself?\\r\\n    // Mapping buyerAddress to array of Products that they bought\\r\\n    // mapping(address => Product[]) public buyerPurchasedProducts;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    function createSeller(string memory _sellerName) public {\\r\\n        require(\\r\\n            !sellersList[msg.sender].isExist,\\r\\n            \\\"Seller with this wallet already exists! \\\"\\r\\n        );\\r\\n        Seller storage newSeller = sellersList[msg.sender]; //get the object\\r\\n        //set the variables\\r\\n        newSeller.sellerAddress = msg.sender;\\r\\n        newSeller.sellerName = _sellerName;\\r\\n        newSeller.sellerID = ++totalSellers;\\r\\n        newSeller.isExist = true;\\r\\n        newSeller.totalProducts = 0;\\r\\n\\r\\n        // sellersList[msg.sender] = newSeller;\\r\\n    }\\r\\n\\r\\n    function createBuyer(string memory _buyerName) public {\\r\\n        require(\\r\\n            !buyersList[msg.sender].isExist,\\r\\n            \\\"Buyer with this wallet already exists! \\\"\\r\\n        );\\r\\n        Buyer storage newBuyer = buyersList[msg.sender]; //get the object\\r\\n        //set the variables\\r\\n        newBuyer.buyerAddress = msg.sender;\\r\\n        newBuyer.buyerName = _buyerName;\\r\\n        newBuyer.buyerID = ++totalBuyers;\\r\\n        newBuyer.isExist = true;\\r\\n        buyersList[msg.sender] = newBuyer; //Is this necessary \\r\\n\\r\\n    }\\r\\n\\r\\n    function uploadProduct(string memory _productName, uint256 price) public {\\r\\n        //only the currently connected wallet + must be registered seller can create products\\r\\n        require(\\r\\n            sellersList[msg.sender].isExist,\\r\\n            \\\"Seller with this wallet does not exists! \\\"\\r\\n        );\\r\\n\\r\\n        Seller storage currentSeller = sellersList[msg.sender]; //TODO: why is it storage?\\r\\n\\r\\n        Product storage newProduct = currentSeller.sellerProducts[\\r\\n            currentSeller.totalProducts\\r\\n        ];\\r\\n\\r\\n        newProduct.ProductID = ++currentSeller.totalProducts;\\r\\n        newProduct.productName = _productName;\\r\\n        newProduct.sellerAddress = msg.sender;\\r\\n        newProduct.productPrice = price;\\r\\n        newProduct.totalSold = 0;\\r\\n        newProduct.isExist = true;\\r\\n\\r\\n        currentSeller.sellerProducts[currentSeller.totalProducts] = newProduct;\\r\\n    }\\r\\n\\r\\n    \\r\\n\\r\\n\\r\\n    function purchaseProduct(uint256 productID, address payable sellAddress) public payable{\\r\\n        require(buyersList[msg.sender].isExist, \\\"This buyer does not exist!\\\");\\r\\n        require(sellersList[sellAddress].sellerProducts[productID].isExist, \\\"The Product does not exist!\\\");\\r\\n        require(msg.value==sellersList[sellAddress].sellerProducts[productID].productPrice, \\\"Ethers not enough/too much to buy the product!\\\");\\r\\n\\r\\n        //TODO: figure out the gas txn fee \\r\\n\\r\\n        (bool callSuccess, ) = sellAddress.call{value: msg.value}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Failed to send ether\\\");\\r\\n\\r\\n        buyersList[msg.sender].purchasedProducts.push(sellersList[sellAddress].sellerProducts[productID]);\\r\\n\\r\\n        sellersList[sellAddress].sellerProducts[productID].totalSold++;\\r\\n\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    /* View and Pure Functions */\\r\\n\\r\\n    function retrieveTotalBuyers() public view returns (uint256) {\\r\\n        return totalBuyers;\\r\\n    }\\r\\n\\r\\n    function retrieveTotalSellers() public view returns (uint256) {\\r\\n        return totalSellers;\\r\\n    }\\r\\n\\r\\n    function viewProductPrice(\\r\\n        address _sellerAddress,\\r\\n        uint256 _productID\\r\\n    ) public view returns (uint256) {\\r\\n        //check whether the seller exists\\r\\n        require(\\r\\n            sellersList[_sellerAddress].isExist,\\r\\n            \\\"Seller with this wallet does not exists! \\\"\\r\\n        );\\r\\n        //check whether the product exists\\r\\n        require(\\r\\n            sellersList[_sellerAddress].sellerProducts[_productID].isExist,\\r\\n            \\\"Seller with this wallet does not exists! \\\"\\r\\n        );\\r\\n        //return the price\\r\\n        return sellersList[_sellerAddress].sellerProducts[_productID].productPrice;\\r\\n    }\\r\\n\\r\\n\\r\\n    function viewProductSold(\\r\\n        address _sellerAddress,\\r\\n        uint256 _productID\\r\\n    ) public view returns (uint256) {\\r\\n        //check whether the seller exists\\r\\n        require(\\r\\n            sellersList[_sellerAddress].isExist,\\r\\n            \\\"Seller with this wallet does not exists! \\\"\\r\\n        );\\r\\n        //check whether the product exists\\r\\n        require(\\r\\n            sellersList[_sellerAddress].sellerProducts[_productID].isExist,\\r\\n            \\\"Seller with this wallet does not exists! \\\"\\r\\n        );\\r\\n        //return the price\\r\\n        return sellersList[_sellerAddress].sellerProducts[_productID].totalSold;\\r\\n    }\\r\\n\\r\\n    function viewProductBought(\\r\\n        address _buyerAddress,\\r\\n        uint256 _txnID\\r\\n    ) public view returns (uint256) {\\r\\n        //check whether the seller exists\\r\\n        require(\\r\\n            buyersList[_buyerAddress].isExist,\\r\\n            \\\"Buyer with this wallet does not exists! \\\"\\r\\n        );\\r\\n        //check whether the product exists\\r\\n        //return the price\\r\\n        return buyersList[_buyerAddress].purchasedProducts[_txnID].ProductID;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x0b21145240a5245eecc5f69e09915483c9c0fe75cb2910001198aef88090c9a7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405260008055600060015534801561001957600080fd5b506123a4806100296000396000f3fe60806040526004361061009c5760003560e01c80639a7ff3f2116100645780639a7ff3f2146101b0578063c9db743c146101d9578063cc6c41e614610216578063eacbdb3414610256578063f881f0001461027f578063fb1a17901461029b5761009c565b806312f524e0146100a157806316415a02146100de5780631a5c21fb1461011f5780633d1c1c531461015c5780637fd6764714610185575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611639565b6102c6565b6040516100d59190611688565b60405180910390f35b3480156100ea57600080fd5b50610105600480360381019061010091906116a3565b610459565b60405161011695949392919061178a565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611639565b610544565b6040516101539190611688565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611919565b610643565b005b34801561019157600080fd5b5061019a6108c0565b6040516101a79190611688565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190611975565b6108ca565b005b3480156101e557600080fd5b5061020060048036038101906101fb9190611639565b610a39565b60405161020d9190611688565b60405180910390f35b34801561022257600080fd5b5061023d600480360381019061023891906116a3565b610bcc565b60405161024d94939291906119be565b60405180910390f35b34801561026257600080fd5b5061027d60048036038101906102789190611975565b610cb1565b005b61029960048036038101906102949190611a48565b610f24565b005b3480156102a757600080fd5b506102b0611392565b6040516102bd9190611688565b60405180910390f35b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff166103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060030154905092915050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546104a290611b49565b80601f01602080910402602001604051908101604052809291908181526020018280546104ce90611b49565b801561051b5780601f106104f05761010080835404028352916020019161051b565b820191906000526020600020905b8154815290600101906020018083116104fe57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16908060050154905085565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc90611bec565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061062957610628611c0c565b5b906000526020600020906006020160000154905092915050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990611afa565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816004016000836005015481526020019081526020016000209050816005016000815461074390611c6a565b9190508190558160000181905550838160010190816107629190611e5e565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600301819055506000816004018190555060018160050160006101000a81548160ff0219169083151502179055508082600401600084600501548152602001908152602001600020600082015481600001556001820181600101908161080e9190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff02191690831515021790555090505050505050565b6000600154905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161561095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906120a0565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010190816109f19190611e5e565b506000808154610a0090611c6a565b919050819055816002018190555060018160030160006101000a81548160ff021916908315150217905550600081600501819055505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac190611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff16610b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6490611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060040154905092915050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610c1590611b49565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4190611b49565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890612132565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001019081610dd89190611e5e565b50600160008154610de890611c6a565b919050819055816002018190555060018160030160006101000a81548160ff02191690831515021790555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019081610ece9190611f46565b50600282015481600201556003820160009054906101000a900460ff168160030160006101000a81548160ff0219169083151502179055506004820181600401908054610f1c92919061139b565b509050505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061219e565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff16611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104d9061220a565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008381526020019081526020016000206003015434146110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e59061229c565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1634604051611114906122ed565b60006040518083038185875af1925050503d8060008114611151576040519150601f19603f3d011682016040523d82523d6000602084013e611156565b606091505b505090508061119a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111919061234e565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000858152602001908152602001600020908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201548160000155600182018160010190816112769190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff0219169083151502179055505050600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000848152602001908152602001600020600401600081548092919061138890611c6a565b9190505550505050565b60008054905090565b8280548282559060005260206000209060060281019282156114a95760005260206000209160060282015b828111156114a857828260008201548160000155600182018160010190816113ee9190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff0219169083151502179055505050916006019190600601906113c6565b5b5090506114b691906114ba565b5090565b5b80821115611530576000808201600090556001820160006114dc9190611534565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000905560048201600090556005820160006101000a81549060ff0219169055506006016114bb565b5090565b50805461154090611b49565b6000825580601f106115525750611571565b601f0160209004906000526020600020908101906115709190611574565b5b50565b5b8082111561158d576000816000905550600101611575565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115d0826115a5565b9050919050565b6115e0816115c5565b81146115eb57600080fd5b50565b6000813590506115fd816115d7565b92915050565b6000819050919050565b61161681611603565b811461162157600080fd5b50565b6000813590506116338161160d565b92915050565b600080604083850312156116505761164f61159b565b5b600061165e858286016115ee565b925050602061166f85828601611624565b9150509250929050565b61168281611603565b82525050565b600060208201905061169d6000830184611679565b92915050565b6000602082840312156116b9576116b861159b565b5b60006116c7848285016115ee565b91505092915050565b6116d9816115c5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117195780820151818401526020810190506116fe565b60008484015250505050565b6000601f19601f8301169050919050565b6000611741826116df565b61174b81856116ea565b935061175b8185602086016116fb565b61176481611725565b840191505092915050565b60008115159050919050565b6117848161176f565b82525050565b600060a08201905061179f60008301886116d0565b81810360208301526117b18187611736565b90506117c06040830186611679565b6117cd606083018561177b565b6117da6080830184611679565b9695505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61182682611725565b810181811067ffffffffffffffff82111715611845576118446117ee565b5b80604052505050565b6000611858611591565b9050611864828261181d565b919050565b600067ffffffffffffffff821115611884576118836117ee565b5b61188d82611725565b9050602081019050919050565b82818337600083830152505050565b60006118bc6118b784611869565b61184e565b9050828152602081018484840111156118d8576118d76117e9565b5b6118e384828561189a565b509392505050565b600082601f830112611900576118ff6117e4565b5b81356119108482602086016118a9565b91505092915050565b600080604083850312156119305761192f61159b565b5b600083013567ffffffffffffffff81111561194e5761194d6115a0565b5b61195a858286016118eb565b925050602061196b85828601611624565b9150509250929050565b60006020828403121561198b5761198a61159b565b5b600082013567ffffffffffffffff8111156119a9576119a86115a0565b5b6119b5848285016118eb565b91505092915050565b60006080820190506119d360008301876116d0565b81810360208301526119e58186611736565b90506119f46040830185611679565b611a01606083018461177b565b95945050505050565b6000611a15826115a5565b9050919050565b611a2581611a0a565b8114611a3057600080fd5b50565b600081359050611a4281611a1c565b92915050565b60008060408385031215611a5f57611a5e61159b565b5b6000611a6d85828601611624565b9250506020611a7e85828601611a33565b9150509250929050565b7f53656c6c6572207769746820746869732077616c6c657420646f6573206e6f7460008201527f2065786973747321200000000000000000000000000000000000000000000000602082015250565b6000611ae46029836116ea565b9150611aef82611a88565b604082019050919050565b60006020820190508181036000830152611b1381611ad7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b6157607f821691505b602082108103611b7457611b73611b1a565b5b50919050565b7f4275796572207769746820746869732077616c6c657420646f6573206e6f742060008201527f6578697374732120000000000000000000000000000000000000000000000000602082015250565b6000611bd66028836116ea565b9150611be182611b7a565b604082019050919050565b60006020820190508181036000830152611c0581611bc9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c7582611603565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ca757611ca6611c3b565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611cd7565b611d1e8683611cd7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d5b611d56611d5184611603565b611d36565b611603565b9050919050565b6000819050919050565b611d7583611d40565b611d89611d8182611d62565b848454611ce4565b825550505050565b600090565b611d9e611d91565b611da9818484611d6c565b505050565b5b81811015611dcd57611dc2600082611d96565b600181019050611daf565b5050565b601f821115611e1257611de381611cb2565b611dec84611cc7565b81016020851015611dfb578190505b611e0f611e0785611cc7565b830182611dae565b50505b505050565b600082821c905092915050565b6000611e3560001984600802611e17565b1980831691505092915050565b6000611e4e8383611e24565b9150826002028217905092915050565b611e67826116df565b67ffffffffffffffff811115611e8057611e7f6117ee565b5b611e8a8254611b49565b611e95828285611dd1565b600060209050601f831160018114611ec85760008415611eb6578287015190505b611ec08582611e42565b865550611f28565b601f198416611ed686611cb2565b60005b82811015611efe57848901518255600182019150602085019450602081019050611ed9565b86831015611f1b5784890151611f17601f891682611e24565b8355505b6001600288020188555050505b505050505050565b600081549050611f3f81611b49565b9050919050565b818103611f5457505061202c565b611f5d82611f30565b67ffffffffffffffff811115611f7657611f756117ee565b5b611f808254611b49565b611f8b828285611dd1565b6000601f831160018114611fba5760008415611fa8578287015490505b611fb28582611e42565b865550612025565b601f198416611fc887611cb2565b9650611fd386611cb2565b60005b82811015611ffb57848901548255600182019150600185019450602081019050611fd6565b868310156120185784890154612014601f891682611e24565b8355505b6001600288020188555050505b5050505050505b565b7f53656c6c6572207769746820746869732077616c6c657420616c72656164792060008201527f6578697374732120000000000000000000000000000000000000000000000000602082015250565b600061208a6028836116ea565b91506120958261202e565b604082019050919050565b600060208201905081810360008301526120b98161207d565b9050919050565b7f4275796572207769746820746869732077616c6c657420616c7265616479206560008201527f7869737473212000000000000000000000000000000000000000000000000000602082015250565b600061211c6027836116ea565b9150612127826120c0565b604082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b7f5468697320627579657220646f6573206e6f7420657869737421000000000000600082015250565b6000612188601a836116ea565b915061219382612152565b602082019050919050565b600060208201905081810360008301526121b78161217b565b9050919050565b7f5468652050726f6475637420646f6573206e6f74206578697374210000000000600082015250565b60006121f4601b836116ea565b91506121ff826121be565b602082019050919050565b60006020820190508181036000830152612223816121e7565b9050919050565b7f457468657273206e6f7420656e6f7567682f746f6f206d75636820746f20627560008201527f79207468652070726f6475637421000000000000000000000000000000000000602082015250565b6000612286602e836116ea565b91506122918261222a565b604082019050919050565b600060208201905081810360008301526122b581612279565b9050919050565b600081905092915050565b50565b60006122d76000836122bc565b91506122e2826122c7565b600082019050919050565b60006122f8826122ca565b9150819050919050565b7f4661696c656420746f2073656e64206574686572000000000000000000000000600082015250565b60006123386014836116ea565b915061234382612302565b602082019050919050565b600060208201905081810360008301526123678161232b565b905091905056fea2646970667358221220e5b864ce505c32a4e58a003e23d8b83b8f184fd10afea1395de209d7f4859c4c64736f6c63430008150033",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80639a7ff3f2116100645780639a7ff3f2146101b0578063c9db743c146101d9578063cc6c41e614610216578063eacbdb3414610256578063f881f0001461027f578063fb1a17901461029b5761009c565b806312f524e0146100a157806316415a02146100de5780631a5c21fb1461011f5780633d1c1c531461015c5780637fd6764714610185575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611639565b6102c6565b6040516100d59190611688565b60405180910390f35b3480156100ea57600080fd5b50610105600480360381019061010091906116a3565b610459565b60405161011695949392919061178a565b60405180910390f35b34801561012b57600080fd5b5061014660048036038101906101419190611639565b610544565b6040516101539190611688565b60405180910390f35b34801561016857600080fd5b50610183600480360381019061017e9190611919565b610643565b005b34801561019157600080fd5b5061019a6108c0565b6040516101a79190611688565b60405180910390f35b3480156101bc57600080fd5b506101d760048036038101906101d29190611975565b6108ca565b005b3480156101e557600080fd5b5061020060048036038101906101fb9190611639565b610a39565b60405161020d9190611688565b60405180910390f35b34801561022257600080fd5b5061023d600480360381019061023891906116a3565b610bcc565b60405161024d94939291906119be565b60405180910390f35b34801561026257600080fd5b5061027d60048036038101906102789190611975565b610cb1565b005b61029960048036038101906102949190611a48565b610f24565b005b3480156102a757600080fd5b506102b0611392565b6040516102bd9190611688565b60405180910390f35b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034e90611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff166103fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f190611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060030154905092915050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010180546104a290611b49565b80601f01602080910402602001604051908101604052809291908181526020018280546104ce90611b49565b801561051b5780601f106104f05761010080835404028352916020019161051b565b820191906000526020600020905b8154815290600101906020018083116104fe57829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16908060050154905085565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166105d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cc90611bec565b60405180910390fd5b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401828154811061062957610628611c0c565b5b906000526020600020906006020160000154905092915050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff166106d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c990611afa565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816004016000836005015481526020019081526020016000209050816005016000815461074390611c6a565b9190508190558160000181905550838160010190816107629190611e5e565b50338160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600301819055506000816004018190555060018160050160006101000a81548160ff0219169083151502179055508082600401600084600501548152602001908152602001600020600082015481600001556001820181600101908161080e9190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff02191690831515021790555090505050505050565b6000600154905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff161561095a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610951906120a0565b60405180910390fd5b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160010190816109f19190611e5e565b506000808154610a0090611c6a565b919050819055816002018190555060018160030160006101000a81548160ff021916908315150217905550600081600501819055505050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610aca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac190611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff16610b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6490611afa565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060040154905092915050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610c1590611b49565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4190611b49565b8015610c8e5780601f10610c6357610100808354040283529160200191610c8e565b820191906000526020600020905b815481529060010190602001808311610c7157829003601f168201915b5050505050908060020154908060030160009054906101000a900460ff16905084565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff1615610d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3890612132565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816001019081610dd89190611e5e565b50600160008154610de890611c6a565b919050819055816002018190555060018160030160006101000a81548160ff02191690831515021790555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018201816001019081610ece9190611f46565b50600282015481600201556003820160009054906101000a900460ff168160030160006101000a81548160ff0219169083151502179055506004820181600401908054610f1c92919061139b565b509050505050565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061219e565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600083815260200190815260200160002060050160009054906101000a900460ff16611056576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104d9061220a565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008381526020019081526020016000206003015434146110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e59061229c565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1634604051611114906122ed565b60006040518083038185875af1925050503d8060008114611151576040519150601f19603f3d011682016040523d82523d6000602084013e611156565b606091505b505090508061119a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111919061234e565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000858152602001908152602001600020908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201548160000155600182018160010190816112769190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff0219169083151502179055505050600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016000848152602001908152602001600020600401600081548092919061138890611c6a565b9190505550505050565b60008054905090565b8280548282559060005260206000209060060281019282156114a95760005260206000209160060282015b828111156114a857828260008201548160000155600182018160010190816113ee9190611f46565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038201548160030155600482015481600401556005820160009054906101000a900460ff168160050160006101000a81548160ff0219169083151502179055505050916006019190600601906113c6565b5b5090506114b691906114ba565b5090565b5b80821115611530576000808201600090556001820160006114dc9190611534565b6002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600382016000905560048201600090556005820160006101000a81549060ff0219169055506006016114bb565b5090565b50805461154090611b49565b6000825580601f106115525750611571565b601f0160209004906000526020600020908101906115709190611574565b5b50565b5b8082111561158d576000816000905550600101611575565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115d0826115a5565b9050919050565b6115e0816115c5565b81146115eb57600080fd5b50565b6000813590506115fd816115d7565b92915050565b6000819050919050565b61161681611603565b811461162157600080fd5b50565b6000813590506116338161160d565b92915050565b600080604083850312156116505761164f61159b565b5b600061165e858286016115ee565b925050602061166f85828601611624565b9150509250929050565b61168281611603565b82525050565b600060208201905061169d6000830184611679565b92915050565b6000602082840312156116b9576116b861159b565b5b60006116c7848285016115ee565b91505092915050565b6116d9816115c5565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156117195780820151818401526020810190506116fe565b60008484015250505050565b6000601f19601f8301169050919050565b6000611741826116df565b61174b81856116ea565b935061175b8185602086016116fb565b61176481611725565b840191505092915050565b60008115159050919050565b6117848161176f565b82525050565b600060a08201905061179f60008301886116d0565b81810360208301526117b18187611736565b90506117c06040830186611679565b6117cd606083018561177b565b6117da6080830184611679565b9695505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61182682611725565b810181811067ffffffffffffffff82111715611845576118446117ee565b5b80604052505050565b6000611858611591565b9050611864828261181d565b919050565b600067ffffffffffffffff821115611884576118836117ee565b5b61188d82611725565b9050602081019050919050565b82818337600083830152505050565b60006118bc6118b784611869565b61184e565b9050828152602081018484840111156118d8576118d76117e9565b5b6118e384828561189a565b509392505050565b600082601f830112611900576118ff6117e4565b5b81356119108482602086016118a9565b91505092915050565b600080604083850312156119305761192f61159b565b5b600083013567ffffffffffffffff81111561194e5761194d6115a0565b5b61195a858286016118eb565b925050602061196b85828601611624565b9150509250929050565b60006020828403121561198b5761198a61159b565b5b600082013567ffffffffffffffff8111156119a9576119a86115a0565b5b6119b5848285016118eb565b91505092915050565b60006080820190506119d360008301876116d0565b81810360208301526119e58186611736565b90506119f46040830185611679565b611a01606083018461177b565b95945050505050565b6000611a15826115a5565b9050919050565b611a2581611a0a565b8114611a3057600080fd5b50565b600081359050611a4281611a1c565b92915050565b60008060408385031215611a5f57611a5e61159b565b5b6000611a6d85828601611624565b9250506020611a7e85828601611a33565b9150509250929050565b7f53656c6c6572207769746820746869732077616c6c657420646f6573206e6f7460008201527f2065786973747321200000000000000000000000000000000000000000000000602082015250565b6000611ae46029836116ea565b9150611aef82611a88565b604082019050919050565b60006020820190508181036000830152611b1381611ad7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b6157607f821691505b602082108103611b7457611b73611b1a565b5b50919050565b7f4275796572207769746820746869732077616c6c657420646f6573206e6f742060008201527f6578697374732120000000000000000000000000000000000000000000000000602082015250565b6000611bd66028836116ea565b9150611be182611b7a565b604082019050919050565b60006020820190508181036000830152611c0581611bc9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c7582611603565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ca757611ca6611c3b565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611cd7565b611d1e8683611cd7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d5b611d56611d5184611603565b611d36565b611603565b9050919050565b6000819050919050565b611d7583611d40565b611d89611d8182611d62565b848454611ce4565b825550505050565b600090565b611d9e611d91565b611da9818484611d6c565b505050565b5b81811015611dcd57611dc2600082611d96565b600181019050611daf565b5050565b601f821115611e1257611de381611cb2565b611dec84611cc7565b81016020851015611dfb578190505b611e0f611e0785611cc7565b830182611dae565b50505b505050565b600082821c905092915050565b6000611e3560001984600802611e17565b1980831691505092915050565b6000611e4e8383611e24565b9150826002028217905092915050565b611e67826116df565b67ffffffffffffffff811115611e8057611e7f6117ee565b5b611e8a8254611b49565b611e95828285611dd1565b600060209050601f831160018114611ec85760008415611eb6578287015190505b611ec08582611e42565b865550611f28565b601f198416611ed686611cb2565b60005b82811015611efe57848901518255600182019150602085019450602081019050611ed9565b86831015611f1b5784890151611f17601f891682611e24565b8355505b6001600288020188555050505b505050505050565b600081549050611f3f81611b49565b9050919050565b818103611f5457505061202c565b611f5d82611f30565b67ffffffffffffffff811115611f7657611f756117ee565b5b611f808254611b49565b611f8b828285611dd1565b6000601f831160018114611fba5760008415611fa8578287015490505b611fb28582611e42565b865550612025565b601f198416611fc887611cb2565b9650611fd386611cb2565b60005b82811015611ffb57848901548255600182019150600185019450602081019050611fd6565b868310156120185784890154612014601f891682611e24565b8355505b6001600288020188555050505b5050505050505b565b7f53656c6c6572207769746820746869732077616c6c657420616c72656164792060008201527f6578697374732120000000000000000000000000000000000000000000000000602082015250565b600061208a6028836116ea565b91506120958261202e565b604082019050919050565b600060208201905081810360008301526120b98161207d565b9050919050565b7f4275796572207769746820746869732077616c6c657420616c7265616479206560008201527f7869737473212000000000000000000000000000000000000000000000000000602082015250565b600061211c6027836116ea565b9150612127826120c0565b604082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b7f5468697320627579657220646f6573206e6f7420657869737421000000000000600082015250565b6000612188601a836116ea565b915061219382612152565b602082019050919050565b600060208201905081810360008301526121b78161217b565b9050919050565b7f5468652050726f6475637420646f6573206e6f74206578697374210000000000600082015250565b60006121f4601b836116ea565b91506121ff826121be565b602082019050919050565b60006020820190508181036000830152612223816121e7565b9050919050565b7f457468657273206e6f7420656e6f7567682f746f6f206d75636820746f20627560008201527f79207468652070726f6475637421000000000000000000000000000000000000602082015250565b6000612286602e836116ea565b91506122918261222a565b604082019050919050565b600060208201905081810360008301526122b581612279565b9050919050565b600081905092915050565b50565b60006122d76000836122bc565b91506122e2826122c7565b600082019050919050565b60006122f8826122ca565b9150819050919050565b7f4661696c656420746f2073656e64206574686572000000000000000000000000600082015250565b60006123386014836116ea565b915061234382612302565b602082019050919050565b600060208201905081810360008301526123678161232b565b905091905056fea2646970667358221220e5b864ce505c32a4e58a003e23d8b83b8f184fd10afea1395de209d7f4859c4c64736f6c63430008150033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "Contracts/Store.sol:Store",
        "label": "totalSellers",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 7,
        "contract": "Contracts/Store.sol:Store",
        "label": "totalBuyers",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 54,
        "contract": "Contracts/Store.sol:Store",
        "label": "sellersList",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(Seller)36_storage)"
      },
      {
        "astId": 59,
        "contract": "Contracts/Store.sol:Store",
        "label": "buyersList",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(Buyer)49_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Product)20_storage)dyn_storage": {
        "base": "t_struct(Product)20_storage",
        "encoding": "dynamic_array",
        "label": "struct Store.Product[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(Buyer)49_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Store.Buyer)",
        "numberOfBytes": "32",
        "value": "t_struct(Buyer)49_storage"
      },
      "t_mapping(t_address,t_struct(Seller)36_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Store.Seller)",
        "numberOfBytes": "32",
        "value": "t_struct(Seller)36_storage"
      },
      "t_mapping(t_uint256,t_struct(Product)20_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Store.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)20_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Buyer)49_storage": {
        "encoding": "inplace",
        "label": "struct Store.Buyer",
        "members": [
          {
            "astId": 38,
            "contract": "Contracts/Store.sol:Store",
            "label": "buyerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 40,
            "contract": "Contracts/Store.sol:Store",
            "label": "buyerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 42,
            "contract": "Contracts/Store.sol:Store",
            "label": "buyerID",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 44,
            "contract": "Contracts/Store.sol:Store",
            "label": "isExist",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 48,
            "contract": "Contracts/Store.sol:Store",
            "label": "purchasedProducts",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(Product)20_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Product)20_storage": {
        "encoding": "inplace",
        "label": "struct Store.Product",
        "members": [
          {
            "astId": 9,
            "contract": "Contracts/Store.sol:Store",
            "label": "ProductID",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 11,
            "contract": "Contracts/Store.sol:Store",
            "label": "productName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 13,
            "contract": "Contracts/Store.sol:Store",
            "label": "sellerAddress",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 15,
            "contract": "Contracts/Store.sol:Store",
            "label": "productPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 17,
            "contract": "Contracts/Store.sol:Store",
            "label": "totalSold",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "Contracts/Store.sol:Store",
            "label": "isExist",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(Seller)36_storage": {
        "encoding": "inplace",
        "label": "struct Store.Seller",
        "members": [
          {
            "astId": 22,
            "contract": "Contracts/Store.sol:Store",
            "label": "sellerAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 24,
            "contract": "Contracts/Store.sol:Store",
            "label": "sellerName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "Contracts/Store.sol:Store",
            "label": "sellerID",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 28,
            "contract": "Contracts/Store.sol:Store",
            "label": "isExist",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 33,
            "contract": "Contracts/Store.sol:Store",
            "label": "sellerProducts",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Product)20_storage)"
          },
          {
            "astId": 35,
            "contract": "Contracts/Store.sol:Store",
            "label": "totalProducts",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}